import React, { createRef, ForwardedRef, forwardRef, ReactElement, useEffect, useLayoutEffect, useState } from 'react';
import { Title, Wrapper } from './LogoMorph.styles';
import { MorphReplace } from 'react-svg-morph';
import { gsap } from 'gsap';
import LogoSVG from '../../atoms/Logo/Logo';

// const Title = (): ReactElement => {
// 	return (
// 		<svg xmlns="http://www.w3.org/2000/svg" fill="white" width="170px" height="36px" viewBox="0 0 171 36" version="1.1">
// 			<g id="surface1">
// 				<path d="M 35.128906 0.628906 C 31.285156 1.121094 28.042969 3.589844 27.019531 6.824219 C 26.058594 9.847656 26.707031 13.488281 28.609375 15.75 C 29.714844 17.070312 31 17.9375 34.679688 19.863281 C 38.121094 21.671875 39.53125 22.78125 40.261719 24.277344 C 41.316406 26.433594 40.828125 28.414062 39.039062 29.238281 C 38.121094 29.667969 37.472656 29.773438 35.800781 29.761719 C 34.417969 29.753906 34.117188 29.722656 33.289062 29.46875 C 32.183594 29.144531 30.699219 28.453125 29.675781 27.785156 C 29.265625 27.523438 28.878906 27.324219 28.828125 27.335938 C 28.703125 27.375 26.558594 32.503906 26.550781 32.777344 C 26.550781 33.027344 26.988281 33.34375 28.167969 33.90625 C 30.835938 35.183594 33.75 35.675781 36.9375 35.382812 C 40.105469 35.089844 42.5 34.105469 44.378906 32.316406 C 45.707031 31.050781 46.460938 29.824219 46.890625 28.203125 C 47.183594 27.105469 47.160156 24.5625 46.847656 23.296875 C 46.566406 22.15625 45.875 20.679688 45.226562 19.820312 C 44.078125 18.304688 42.71875 17.308594 39.542969 15.65625 C 35.445312 13.519531 34.011719 12.421875 33.226562 10.820312 C 32.925781 10.214844 32.902344 10.089844 32.945312 9.386719 C 33.09375 7.085938 34.765625 5.851562 37.523438 5.996094 C 39.34375 6.101562 41.078125 6.667969 42.644531 7.679688 C 43.0625 7.953125 43.492188 8.164062 43.605469 8.140625 C 43.785156 8.121094 43.972656 7.671875 44.695312 5.609375 C 45.175781 4.226562 45.570312 3.023438 45.570312 2.917969 C 45.570312 2.523438 43.628906 1.515625 42.039062 1.089844 C 40.410156 0.660156 36.8125 0.417969 35.128906 0.628906 Z M 35.128906 0.628906 " />
// 				<path d="M 126.054688 0.847656 C 124.707031 0.898438 123.035156 0.984375 122.34375 1.027344 L 121.089844 1.097656 L 121.089844 34.902344 L 127.203125 34.902344 C 133.695312 34.902344 134.15625 34.871094 136.046875 34.378906 C 138.074219 33.84375 139.769531 32.914062 141.210938 31.542969 C 142.632812 30.179688 143.394531 28.800781 143.773438 26.90625 C 144.011719 25.722656 143.9375 22.90625 143.636719 21.820312 C 143.175781 20.144531 142.476562 18.953125 141.273438 17.8125 C 140.511719 17.089844 139.203125 16.230469 138.523438 16 C 138.335938 15.9375 138.179688 15.855469 138.179688 15.8125 C 138.179688 15.761719 138.378906 15.59375 138.628906 15.4375 C 140.804688 13.992188 141.933594 11.949219 141.941406 9.472656 C 141.941406 4.929688 139.109375 1.90625 134 0.996094 C 132.746094 0.773438 129.421875 0.710938 126.054688 0.847656 Z M 132.816406 6.308594 C 134.511719 6.800781 135.316406 7.640625 135.566406 9.148438 C 135.679688 9.898438 135.535156 10.957031 135.199219 11.667969 C 134.761719 12.601562 133.832031 13.28125 132.472656 13.65625 C 131.804688 13.84375 128.363281 14.003906 127.6875 13.875 L 127.308594 13.804688 L 127.308594 6.183594 L 127.757812 6.144531 C 128.773438 6.039062 132.273438 6.152344 132.816406 6.308594 Z M 133.359375 19.097656 C 135.117188 19.496094 136.164062 20.15625 136.757812 21.246094 C 137.875 23.304688 137.53125 26.644531 136.035156 28.097656 C 134.710938 29.386719 131.898438 29.941406 128.175781 29.648438 L 127.308594 29.585938 L 127.308594 18.816406 L 129.953125 18.867188 C 131.867188 18.910156 132.796875 18.972656 133.359375 19.097656 Z M 133.359375 19.097656 " />
// 				<path d="M 3.585938 0.984375 C 1.964844 1.058594 0.804688 1.140625 0.730469 1.214844 C 0.660156 1.289062 0.636719 6.5 0.648438 18.113281 L 0.679688 34.902344 L 6.847656 34.902344 L 6.878906 28.800781 L 6.898438 22.699219 L 8.496094 22.761719 C 12.082031 22.917969 15.332031 22.363281 17.714844 21.191406 C 20.945312 19.589844 22.734375 16.746094 23.109375 12.589844 C 23.644531 6.613281 21.082031 3.003906 15.3125 1.621094 C 12.269531 0.890625 9.511719 0.742188 3.585938 0.984375 Z M 11.789062 6.75 C 14.320312 7.253906 15.835938 8.277344 16.441406 9.910156 C 16.621094 10.402344 16.660156 10.746094 16.660156 11.667969 C 16.660156 14.472656 15.5 16.023438 12.835938 16.746094 C 11.425781 17.121094 9.375 17.257812 7.609375 17.089844 L 6.898438 17.027344 L 6.898438 11.816406 C 6.898438 6.949219 6.910156 6.601562 7.085938 6.550781 C 7.472656 6.4375 10.945312 6.570312 11.789062 6.75 Z M 11.789062 6.75 " />
// 				<path d="M 52.105469 1.171875 C 52.074219 1.246094 52.0625 8.863281 52.074219 18.105469 L 52.105469 34.902344 L 58.273438 34.902344 L 58.273438 1.097656 L 55.210938 1.066406 C 52.816406 1.046875 52.136719 1.066406 52.105469 1.171875 Z M 52.105469 1.171875 " />
// 				<path d="M 75.726562 1.152344 C 75.664062 1.253906 88.050781 35.101562 88.238281 35.339844 C 88.320312 35.445312 88.8125 35.476562 90.066406 35.476562 L 91.78125 35.476562 L 91.929688 35.121094 C 92.898438 32.808594 104.773438 1.644531 104.773438 1.414062 L 104.785156 1.097656 L 101.554688 1.066406 C 99.640625 1.058594 98.28125 1.089844 98.210938 1.140625 C 98.148438 1.191406 96.308594 6.214844 94.125 12.285156 L 90.152344 23.335938 L 89.953125 22.730469 C 89.835938 22.40625 88.144531 17.402344 86.167969 11.617188 L 82.59375 1.097656 L 79.195312 1.066406 C 76.980469 1.058594 75.769531 1.078125 75.726562 1.152344 Z M 75.726562 1.152344 " />
// 				<path d="M 108.128906 1.171875 C 108.097656 1.246094 108.085938 8.863281 108.097656 18.105469 L 108.128906 34.902344 L 114.296875 34.902344 L 114.296875 1.097656 L 111.234375 1.066406 C 108.839844 1.046875 108.160156 1.066406 108.128906 1.171875 Z M 108.128906 1.171875 " />
// 				<path d="M 148.894531 1.171875 C 148.863281 1.246094 148.851562 8.863281 148.863281 18.105469 L 148.894531 34.902344 L 170.320312 34.902344 L 170.320312 29.355469 L 162.773438 29.324219 L 155.21875 29.300781 L 155.21875 19.675781 L 160.632812 19.652344 L 166.035156 19.621094 L 166.035156 14.285156 L 160.632812 14.253906 L 155.21875 14.234375 L 155.21875 6.699219 L 162.773438 6.675781 L 170.320312 6.644531 L 170.320312 1.097656 L 159.628906 1.066406 C 151.128906 1.046875 148.925781 1.066406 148.894531 1.171875 Z M 148.894531 1.171875 " />
// 			</g>
// 		</svg>
// 	);
// };
export const navBeginDuration = 1.2;

export const navBeginDelay = 0.3;

const LogoMorph = (props: any, ref: ForwardedRef<HTMLDivElement>): ReactElement => {
	const titleRef = createRef<HTMLDivElement>();
	const logoRef = createRef<SVGElement>();

	useLayoutEffect(() => {
		const titleEndDuration = 0.8;
		const logoBeginDelay = navBeginDuration + titleEndDuration + navBeginDelay + 0.35;
		initTitle(navBeginDuration, navBeginDelay);
		setTimeout(() => {
			endTitle(titleEndDuration);
		}, 2200);
		initLogo(logoBeginDelay);
	});

	const initTitle = (duration: number, delay: number) => {
		gsap.fromTo(
			titleRef.current,
			{
				y: -33,
				opacity: 0,
			},
			{
				delay,
				y: 0,
				opacity: 1,
				duration,
			}
		);
	};

	const endTitle = (duration: number) => {
		gsap.to(titleRef.current, {
			y: 30,
			opacity: 0,
			display: 'none',
			duration,
		});
	};

	const initLogo = (delay: number) => {
		gsap.fromTo(
			logoRef.current,
			{
				y: -50,
				opacity: 0,
				stagger: 30,
			},
			{
				y: 0,
				delay,
				opacity: 1,
				duration: 1.4,
			}
		);
	};

	return (
		<Wrapper ref={ref}>
			{/*<MorphReplace easing={(x) => x * x} duration={1100} width={70} height={70}>*/}
			{/*	{isTitle ? <Title key="title" /> : <Logo key="logo" />}*/}
			{/*</MorphReplace>*/}
			<LogoSVG key="logo" ref={logoRef} />
			<Title ref={titleRef}>PSI VIBE</Title>
		</Wrapper>
	);
};

export default forwardRef(LogoMorph);
